buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:4.0.0'
		classpath 'com.github.node-gradle:gradle-node-plugin:5.0.0'
		classpath 'net.researchgate:gradle-release:2.8.1'
	}
}

apply plugin: 'net.researchgate.release'
apply plugin: 'com.github.node-gradle.node'

// Configuration for Xtext projects
configure(subprojects.findAll { it.name.startsWith('faasit') }) {
	ext.xtextVersion = '2.30.0'
	repositories {
		maven {
		 	url 'https://oss.sonatype.org/content/repositories/snapshots'
		}
		mavenCentral()
	}

	apply plugin: 'java-library'
	dependencies {
		api platform("org.eclipse.xtext:xtext-dev-bom:${xtextVersion}")
	}
	apply plugin: 'org.xtext.xtend'
	apply from: "${rootDir}/gradle/source-layout.gradle"
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	group = 'cn.njuics.faasit.dsl'
	version = '1.0.0-SNAPSHOT'

	sourceCompatibility = '1.17'
	targetCompatibility = '1.17'

	configurations.all {
		exclude group: 'asm'
	}

}

// Configuration for vscode projects
configure(subprojects.findAll { it.name.startsWith('vscode') }) {

	apply plugin: 'com.github.node-gradle.node'
	node {
		version = '16.14.0'
		download = true
	}

	def inputFiles = fileTree(
			dir: projectDir,
			excludes: [ 'out/**', '.gitignore', '.gradle/**', 'build/**', '*.gradle' ]
	)

	task vscodeExtension(dependsOn: [pnpmInstall], type: PnpmTask) {
		ext.destDir = new File(buildDir, 'vscode')
		ext.archiveName = "$project.name-${project.version}.vsix"
		ext.destPath = "$destDir/$archiveName"
		inputs.with {
			files inputFiles
		}
		outputs.dir destDir
		doFirst {
			destDir.mkdirs()
		}
		// @see https://github.com/microsoft/vscode-vsce/issues/421 to solve when use vsce and pnpm
		args = [ 'run', 'package', '--out', destPath ]
		execOverrides {
			workingDir = projectDir
		}
	}

	task clean {
		doLast {
			delete 'out' // output of npmInstall - don't want to delete node_modules
		}

	}

}

updateVersion {
		doLast {
			// custom code
			def versionPattern = /\d+.\d+(.\d+)?/
			def encoding = 'UTF-8'
			def filesToUpdate = [
				new File('packages', 'vscode-faasit', 'package.json'),
			]

			// String replacements - isn't long enough to justify advanced code ;)
			filesToUpdate.forEach { file ->

				String text = file.getText(encoding)
				text = text.replaceAll("\"version\": \"$versionPattern\",", "\"version\": \"$project.version\",")
				file.setText(text, encoding)
			}
		}
	}

release {
    tagTemplate = 'v${version}'
		preTagCommitMessage = '[release] pre tag commit: '
    tagCommitMessage = '[release] creating tag: '
    newVersionCommitMessage = '[release] new version commit: '
    failOnSnapshotDependencies = false
}

// Workaround for issue https://github.com/researchgate/gradle-release/issues/144
task build {
	dependsOn subprojects.findResults { it.tasks.findByName('build') }
}
